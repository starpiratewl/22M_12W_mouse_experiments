library("meshr")
library(mygene)
library("fdrtool") 
library("MeSH.Mmu.eg.db")

setwd("D:\\importantbk\\working\\lab_working\\sequencing\\BC160712\\1.mRNA+circRNA\\2_gene_expression_analysis\\2_3_differential_gene")



mydata_all <- read.csv("mw_all.txt", sep = "\t", stringsAsFactor = F)
mydata_down <- read.csv("下调基因.txt", sep = "\t", stringsAsFactor = F)
mydata_up <- read.csv("上调基因.txt", sep = "\t", stringsAsFactor = F)

all_list <- unique(mydata_all$gene.name)
down_list <- unique(mydata_down$gene.name)
up_list <- unique(mydata_up$gene.name)


## use mygene package
haha <- queryMany(down_list, scopes="symbol", fields=c("id"), species="mouse", returnall = T)

result <- cbind(haha$response[,1],as.character(haha$response[,2]),haha$response[,3],haha$response[,4])
colnames(result) <- c("notfound","query","id","X_score")
result <- as.data.frame(result)
result$query <- as.character(result$query)


## use biomaRt
library(biomaRt)

## define biomart object
## 1,biomart have changed a lot in the past few months. first we need add host="www.ensembl.org here to indicate the host site.
## 2,listMarts(host = "www.ensembl.org") can tell us the name of the database, we choose the "ENSEMBL_MART_ENSEMBL" here.

mart <- useMart("ENSEMBL_MART_ENSEMBL", dataset = "mmusculus_gene_ensembl", host="www.ensembl.org")

down_tab <- getBM(attributes = c("entrezgene","external_gene_name"),filters = "external_gene_name", down_list, mart = mart)

overall <- merge(result, down_tab, all = T, by.x = "query", by.y = "external_gene_name")

##allgeneid <- read.csv(file = "DE_genelist_id_all.txt", sep = "\t", header = F, stringsAsFactor = F)$V1
##siggeneid <- read.csv(file = "DE_genelist_id_sig.txt", sep = "\t", header = F, stringsAsFactor = F)$V1






# like topGO, it need to construct a MeSHHyperGParams object to specify all the parameters when do enrichment.
meshParams <- new("MeSHHyperGParams", #
                  geneIds = siggeneid, #
                  universeGeneIds = allgeneid, #
                  annotation = "MeSH.Hsa.eg.db", #
                  category = "C", # like the classification of BP,MF,CC in GO
                  database = "gene2pubmed", #can be gendoo, gene2pubmed or RBBH
                  pvalueCutoff = 0.05, #
                  pAdjust = "none") ## pAdjust is set to none because this is really a very limited example,most of the times we can set it to BH, QV or FDR.
                  
                  
meshR <- meshHyperGTest(meshParams)             ## hypergeometry calculation of pvalue

meshR                                           ## to see what kind of object the mesh is, is it like a GO?
##MeSH enrichment analysis for category Diseases 
##Annotation package used:  MeSH.Hsa.eg.db 
##The correspondance is retrived from:  gendoo 
##Number of MeSH terms identified:  9 

head(summary(meshR))
##       MESHID       Pvalue OddsRatio ExpCount Count Size              MESHTERM GENEID SOURCEID
##15774 D009361 0.0002619206  3.942771 11.32673    21   33 Neoplasm Invasiveness   1576     <NA>
##15775 D009361 0.0002619206  3.942771 11.32673    21   33 Neoplasm Invasiveness   6279     <NA>
##15776 D009361 0.0002619206  3.942771 11.32673    21   33 Neoplasm Invasiveness   2778     <NA>
##15777 D009361 0.0002619206  3.942771 11.32673    21   33 Neoplasm Invasiveness    894     <NA>
##15778 D009361 0.0002619206  3.942771 11.32673    21   33 Neoplasm Invasiveness   2524     <NA>
##15779 D009361 0.0002619206  3.942771 11.32673    21   33 Neoplasm Invasiveness   7306     <NA>


result <- summary(meshR)[summary(meshR)$GENEID %in% siggeneid,]

write.table(result, file = "MESH_result.txt",quote = F, row.names = F, col.names = T, sep = "\t")

save.abst(result)




##################################
## dealing with the mesh result
##################################

setwd("D:\\importantbk\\learning\\meshr\\limma_test")

result_tab <- read.csv(file = "MESH_result.txt", sep = "\t", stringsAsFactor = F)


geneid <- result_tab$GENEID

library(biomaRt)

mart <- useMart("ENSEMBL_MART_ENSEMBL", dataset = "hsapiens_gene_ensembl", host="www.ensembl.org")

##genesymbol <- getBM(attributes=c('hgnc_symbol'),filters = 'entrezgene', values = geneid,mart = mart)
genesymbol <- geneid

for (i in 1:length(geneid)){
  genesymbol[i] <- getBM(attributes=c('hgnc_symbol'),filters = 'entrezgene', values = as.character(geneid[i]),mart = mart)$hgnc_symbol
}

## view the overall distribution of pubmed papaers
barplot(table(result_tab$MESHTERM))

## view the distributions of MeSH terms containing over 100 pubmed papaers 
over100 <- table(result_tab$MESHTERM)[table(result_tab$MESHTERM)>100]

barplot(over100, ylim = c(-600,1500),names.arg=F)

text(x = 1:length(over100), y = -200, labels = names(over100),cex =1, srt = 65)


## view the terms by the means of pvalue
test <- unique(result_tab[,c(1,2,3,4,5,6,7)])

test_20 <- head(test,20)

barplot(test_20$Pvalue,main="the most significant MeSH terms",xlab="P-value",horiz=TRUE,names=FALSE)

text(-0.00000000000000001,1:20,test_20$MESHTERM,cex=0.8,xpd=T,srt=0,pos=4)















