setwd("D:\\importantbk\\working\\lab_working\\sequencing\\BC160712\\1.mRNA+circRNA\\4_lncRNA\\analysis")

## up_list
updata <- read.csv(file = "lncRNA_count.AMXB22M_vs_AMXB12W.edgeR_differential_UP.txt", sep = "\t", stringsAsFactor = F)
up_list <- updata$lncRNA_id
## down_list
downdata <- read.csv(file = "lncRNA_count.AMXB22M_vs_AMXB12W.edgeR_differential_DOWN.txt", sep = "\t", stringsAsFactor = F)
down_list <- downdata$lncRNA_id

test <- c("ENSMUST00000180670", "ENSMUST00000193261", "ENSMUST00000205571", "NONMMUT002657.2",  "NONMMUT006710.2",    "NONMMUT014402.2", "NONMMUT017282.2")


library(RCurl)
library(XML)

getensembl <- function(x){
  ##url <- "http://www.noncode.org/search.php?search_type=keyword&keyword=ENSMUST00000193393"
  tmp <- getForm(uri = "http://www.noncode.org/search.php?", search_type = "keyword", keyword = x)
  ##write.table(tmp, file = "haha.txt")
  doc <- htmlParse(tmp)
  nodetest <- getNodeSet(doc,"//div/div/div/div[@style = 'padding-top:5px']")[[1]]
  nodebody <- getNodeSet(nodetest, "//div/table/table/tr[2]/td/table[@border = '0']/tr[2]/td[1]/a/text()")[[1]]
  return(xmlValue(nodebody))
}


up_table <- cbind(ori_tag = up_list, ser_tag = up_list, gene_tag = rep(NA, length(up_list)))



ensembl_index <- grep("ENSMUST", up_table[,1])

for (i in ensembl_index){
  up_table[i,2] <- getensembl(up_table[i,1])
}



getlncgene <- function(x){
##url <- c("http://www.noncode.org/show_rna.php?id=NONMMUT028177.2")
##getFormParams(query=url)
  tmp <- getForm(uri="http://www.noncode.org/show_rna.php?", id = x)

  doc <- htmlParse(tmp)

  nodetest <- getNodeSet(doc, "//table/table[@class = 'mPlist_infoB']")[[1]]

  nodetbody <- getNodeSet(nodetest, "//tr/td/table/tbody")[[1]]

  genepos <- getNodeSet(nodetbody, '//tbody/tr[2]')[[1]]

  genesymbol <- getNodeSet(genepos,'//tr/td/a[@href]/text()')[[2]]
  return(xmlValue(genesymbol))
}



noncode_index <- grep("NONMMUT", up_table[,2])

for (i in noncode_index){
  up_table[i,3] <- getlncgene(up_table[i,2])
  ##Sys.sleep(1)
}





getshortlnc3 <- function(x){
  return(strsplit(x[3], "\\.")[[1]][1])
}


test <- apply(up_table, 1, FUN = getshortlnc3)
up_table$short <- test


fun_table <- read.csv(file = "NONCODE2016_mouse.func", sep = "\t", stringsAsFactor = F)


up_table$GOs <- rep("GOO", dim(up_table)[1])


for (i in 1:dim(up_table)[1]){
  if(!is.na(up_table[i,4])){
  s <- c("")
  for (m in 1:length(grep(up_table[i,4], fun_table$V1))){
    s <- paste(s, fun_table[grep(up_table[i,4], fun_table$V1)[m],2], sep = ";")
  }
  up_table[i,5] <- s}else{
  up_table[i,5] <- NA
  }
}


write.table(up_table, file = "up_table_GOS.txt", sep = "\t", row.names = F, col.names = T, quote = F)






up_table <- read.csv(file = "up_table_GOS.txt", sep = "\t", stringsAsFactor = F)

up_table$Terms <- rep("Terms", dim(up_table)[1])

for (i in 1:dim(up_table)[1]){
  if(!is.na(up_table[i,5])){
  s <- c("")
  for (m in 1:length(unlist(strsplit(up_table[i,5], ";")))){
    s <- paste(s, GOTERM[[unlist(strsplit(up_table[i,5], ";"))[m]]]@Term, sep = ";;;")
  }
  up_table[i,6] <- s}else{
  up_table[i,6] <- NA
  }
}


write.table(up_table, file = "up_table_Terms.txt", sep = "\t", row.names = F, col.names = T, quote = F)



#############################################
## function test of null GO terms
#############################################

xx <- c("GO:0000046;GO:0006914")
haha <- unlist(strsplit(xx, ";"))

for (i in 1:length(haha)){
  if(is.null(GOTERM[[haha[i]]])){print(haha[i])}
}































library(org.Hs.eg.db)
library(org.Mm.eg.db)
help("org.Hs.egGO2ALLEGS")
e<-mget(cell.death.GO.terms,org.Hs.egGO2ALLEGS,ifnotfound=NA)
e<-mget("GO:0006082",org.Hs.egGO2ALLEGS,ifnotfound=NA)
t<-lapply(e,function(.ele,x){intersect(as.character(x),.ele)},genelist.entrez.id)


library(AnnotationDbi)
library(GO.db)
xx <- as.list("GO:0006082","GO:0008369")
if(length(xx) > 0){
  # Get the TERMS for the first elent of xx
  GOID(xx[[1]])
  Term(xx[[1]])
  Synonym(xx[[1]])
  Secondary(xx[[1]])
  Definition(xx[[1]])
  Ontology(xx[[1]])
}




library(GO.db)

goids <- c("GO:0003674","GO:0006810","GO:0001659","GO:0006629","GO:0006631","GO:0008152","GO:0019254","GO:0033539","GO:0042413")

gocategory <- rep(NA, length(goids))

goterms <- rep(NA, length(goids))

gointerpretation <- rep(NA, length(goids))

gotable <- data.frame(goids, gocategory, goterms, gointerpretation)
gotable$goids <- as.character(gotable$goids)

for (i in 1:dim(gotable)[1]){
  gotable[i,2] <- GOTERM[[gotable[i,1]]]@Ontology
  gotable[i,3] <- GOTERM[[gotable[i,1]]]@Term
  gotable[i,4] <- GOTERM[[gotable[i,1]]]@Definition
}






